# FIRST: make sure to have unfolded data, derived / ancestral state is defined
# recommendations: if you have outgroup or ancient population, extract new SNPs, by excluding monomorphic SNPs in ancient population.
# use for instance vcftools count/ freq for this compare counts and keep snps that are monomorphic in ancient population
# usecontruct consensus sequence using ancient pop

vcftools --vcf  freebayes.SNPs.filtered.final.recode.vcf --keep ../pop/norway --counts2 --out norway
vcftools --vcf  freebayes.SNPs.filtered.final.recode.vcf --keep ../pop/ARD --counts2 --out ARD 

## start R
R
ard_c=read.table("ARD.frq.count",sep="\t",header=T,fill=T,row.names=NULL)
norway_c=read.table("norway.frq.count",sep="\t",header=T,fill=T,row.names=NULL)

# extract snps which freq = 0 in ancient population
anc_tmp=norway_c[ard_c[,6]==0,]

tmp1=na.omit(anc_tmp)
tmp2=tmp1[tmp1[,6]>0,]

write.table(tmp2,"keep",row.names=F,quote=F,sep="\t")
## end R

## use first two columns to extract snps, edit file
awk '{print $1"\t"$2}' keep >keep2

vcftools --vcf  freebayes.SNPs.filtered.final.recode.vcf --keep ../pop/all --positions keep2 --recode --out unique

# construct consesnus fasta sequence
#cat ~/data/symphodus_melops.fasta | vcf-consensus ARD_only.recode.vcf.gz -s ARD15 > ARD.consensus.fasta

#  use script to convert vcf to dadi SFS
#  https://groups.google.com/group/dadi-user/attach/15ae6994986666dc/convert_vcf_to_dadi_input.pl?part=0.1&authuser=0&view=1
#
# requires a vcffile, genomefastafile and a list file decribing the samples, 2 columns

scp unique.recode.vcf dadi/
cd ~data/bam_fixrg_dedup/freebayes/dadi

# convert to input for IBS estimation

# 2D analysis to dadi
perl convert_vcf_2_dadi.pl ../ARD.consensus.fasta unique.recode.vcf list5


# Start dadi

import numpy 
import dadi
import pylab



################ 2D
# load  data
print 'Reading data'
dd = dadi.Misc.make_data_dict('all.data')
all = dadi.Spectrum.from_data_dict(dd, ['South','West','Atlantic'], [66,48,16], polarized=True)
# end loading data
################

################ 1D
S = all.marginalize([1,2])
W = all.marginalize([0,2])

################ 2D
data = all.marginalize([2])


################
### Calculate descriptive statistics
ns = data.sample_sizes
S = data.S()
print "Segregating sites:",S
Fst = data.Fst()
print "FST:",Fst
# end calculate descriptive statistics
################

data40=data.project([40,40])

pylab.figure()
dadi.Plotting.plot_single_2d_sfs(data40,vmin=1, vmax=100000)
pylab.savefig('Norway.png', dpi=100)
pylab.close()

# export data for scripts
data40.to_file('ALL_spectrum_from_dadi.v6.fs')
S.to_file('SOUTH_spectrum_from_dadi.v6.fs')
W.to_file('WEST_spectrum_from_dadi.v6.fs')






